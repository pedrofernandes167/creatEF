// <auto-generated />
using System;
using Codenation.Challenge.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Source.Migrations
{
    [DbContext(typeof(CodenationContext))]
    [Migration("20200707034855_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Codenation.Challenge.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_At");

                    b.Property<string>("Name");

                    b.Property<string>("Slug");

                    b.HasKey("Id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("Source.Models.Acceleration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChallengeId");

                    b.Property<DateTime>("Created_At");

                    b.Property<string>("Name");

                    b.Property<string>("Slug");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId");

                    b.ToTable("acceleration");
                });

            modelBuilder.Entity("Source.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccelerationId");

                    b.Property<int>("Acceleration_Id");

                    b.Property<int?>("CompanyId");

                    b.Property<int>("Company_Id");

                    b.Property<DateTime>("Created_At");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("AccelerationId");

                    b.HasIndex("CompanyId");

                    b.ToTable("candidate");
                });

            modelBuilder.Entity("Source.Models.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_At");

                    b.Property<string>("Name");

                    b.Property<string>("Slug");

                    b.HasKey("Id");

                    b.ToTable("challenge");
                });

            modelBuilder.Entity("Source.Models.Submission", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChallengeId");

                    b.Property<int>("Challenge_Id");

                    b.Property<DateTime>("Created_At");

                    b.Property<decimal>("Score");

                    b.HasKey("User_Id");

                    b.HasIndex("ChallengeId");

                    b.ToTable("submission");
                });

            modelBuilder.Entity("Source.Models.Acceleration", b =>
                {
                    b.HasOne("Source.Models.Challenge")
                        .WithMany("Accelerations")
                        .HasForeignKey("ChallengeId");
                });

            modelBuilder.Entity("Source.Models.Candidate", b =>
                {
                    b.HasOne("Source.Models.Acceleration")
                        .WithMany("Candidates")
                        .HasForeignKey("AccelerationId");

                    b.HasOne("Codenation.Challenge.Models.Company")
                        .WithMany("Candidates")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("Source.Models.Submission", b =>
                {
                    b.HasOne("Source.Models.Challenge")
                        .WithMany("Submissions")
                        .HasForeignKey("ChallengeId");
                });
#pragma warning restore 612, 618
        }
    }
}
